{"version":3,"file":"static/webpack/static/development/pages/index.js.2fc43a86ea434a84ade7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["// import LapRunners from \"../components/LapRunners\";\nimport { convertToCentiSeconds } from \"../helpers/helpers\";\n\nexport default class HomePage extends React.Component {\n  state = {\n    /**\n     * Epoch timestamp of when the timer was started in centiseconds\n     */\n    started: null,\n\n    /**\n     * Total time recorded when stopping the timer in centiseconds\n     */\n    recordedTime: 0,\n\n    /**\n     * Sum of lap times in centiseconds\n     * Setting this value on each lap so it doesn't need to be\n     * calculated when rendering\n     */\n    lapTotal: 0,\n\n    /**\n     * Array of lap times in centiseconds. New laps are prepended, so the list is in reverse\n     */\n    laps: []\n\n    // totalTime: 0,\n    // runnersCount: 1,\n    // runnersName: [\"runner1\"],\n    // currentLapTime: [0][0]\n  };\n\n  // setRunners = numOfRunners => {\n  //   this.setState({ runners: numOfRunners });\n  // };\n\n  // resetRunners = () => {\n  //   this.setState({ runners: null });\n  // };\n\n  componentDidMount() {\n    this.tick();\n  }\n\n  componentDidUpdate() {\n    requestAnimationFrame(this.tick.bind(this));\n  }\n\n  tick() {\n    if (this.state.started) {\n      const now = convertToCentiSeconds(Date.now());\n      const totalTime = now - this.state.started + this.state.recordedTime;\n      this.setState({\n        now,\n        totalTime,\n        currentLapTime: totalTime - this.state.lapTotal\n      });\n    } else {\n      if (this.state.recordedTime !== this.state.totalTime) {\n        this.setState({\n          totalTime: this.state.recordedTime,\n          currentLapTime: this.state.recordedTime - this.state.lapTotal\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <h1>\n          <strike>Multi-Runner</strike> \"Single-Runner\" Lap Time Tracker built\n          in Next.js!\n        </h1>\n\n        {/* Runners */}\n        <div>\n          <span>Runner#1 </span>\n          <span>\n            <input type=\"text\" value=\"Alex\" />\n          </span>\n        </div>\n        <button disabled>Add Runner</button>\n\n        <hr />\n\n        {/* Timers */}\n\n        <div>\n          <button disabled onClick={() => this.startTime}>\n            Start Timer\n          </button>\n          <h1>Total Time</h1>\n          <h3></h3>\n        </div>\n      </div>\n    );\n  }\n}\n\n// export default HomePage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;;;AAKA;AACA;AACA;;;AAGA;AAGA;AACA;AACA;AACA;AA3BA;AACA;;;;;;AA4BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA/FA;AACA;AACA;;;;;A","sourceRoot":""}