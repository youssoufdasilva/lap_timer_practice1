{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/youdasilva/Projects/Web Projects/dcsl_test/dcsl_practice1/components/LapRunner.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Lap from \"./Lap\";\nimport { convertToCentiSeconds } from \"../helpers/helpers\";\n\nvar LapRunner = function LapRunner(_ref) {\n  var name = _ref.name,\n      pos = _ref.pos,\n      laps = _ref.laps,\n      addLap = _ref.addLap;\n  return __jsx(\"div\", {\n    style: {\n      margin: \"5px\",\n      padding: \"10px\",\n      border: \"3px dotted red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Runner \", pos + 1, \": \"), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, name), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return addLap(pos, convertToCentiSeconds(_Date$now()));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Add Lap\"), __jsx(\"button\", {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"End Run\"), laps.slice(0).reverse().map(function (lap, i) {\n    // const lapNumber = laps.length - i;\n    var lapNumber = i; // label={`Lap #${lapNumber}`} time={lap}\n    //\n\n    return __jsx(Lap, {\n      key: lapNumber,\n      label: \"Lap #\".concat(lapNumber),\n      time: lap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default LapRunner;","map":{"version":3,"sources":["/Users/youdasilva/Projects/Web Projects/dcsl_test/dcsl_practice1/components/LapRunner.js"],"names":["Lap","convertToCentiSeconds","LapRunner","name","pos","laps","addLap","margin","padding","border","slice","reverse","map","lap","i","lapNumber"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,GAAT,QAASA,GAAT;AAAA,MAAcC,IAAd,QAAcA,IAAd;AAAA,MAAoBC,MAApB,QAAoBA,MAApB;AAAA,SAChB;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,OAAO,EAAE,MAA1B;AAAkCC,MAAAA,MAAM,EAAE;AAA1C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAeL,GAAG,GAAG,CAArB,OADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,IAAR,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMG,MAAM,CAACF,GAAD,EAAMH,qBAAqB,CAAC,WAAD,CAA3B,CAAZ;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAOE;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,EAQGI,IAAI,CACFK,KADF,CACQ,CADR,EAEEC,OAFF,GAGEC,GAHF,CAGM,UAACC,GAAD,EAAMC,CAAN,EAAY;AACf;AACA,QAAMC,SAAS,GAAGD,CAAlB,CAFe,CAGf;AACA;;AACA,WAAO,MAAC,GAAD;AAAK,MAAA,GAAG,EAAEC,SAAV;AAAqB,MAAA,KAAK,iBAAUA,SAAV,CAA1B;AAAiD,MAAA,IAAI,EAAEF,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GATF,CARH,CADgB;AAAA,CAAlB;;AAsBA,eAAeX,SAAf","sourcesContent":["import Lap from \"./Lap\";\nimport { convertToCentiSeconds } from \"../helpers/helpers\";\n\nconst LapRunner = ({ name, pos, laps, addLap }) => (\n  <div style={{ margin: \"5px\", padding: \"10px\", border: \"3px dotted red\" }}>\n    <label>Runner {pos + 1}: </label>\n    <label>{name}</label>\n    <br />\n    <button onClick={() => addLap(pos, convertToCentiSeconds(Date.now()))}>\n      Add Lap\n    </button>\n    <button disabled>End Run</button>\n    {laps\n      .slice(0)\n      .reverse()\n      .map((lap, i) => {\n        // const lapNumber = laps.length - i;\n        const lapNumber = i;\n        // label={`Lap #${lapNumber}`} time={lap}\n        //\n        return <Lap key={lapNumber} label={`Lap #${lapNumber}`} time={lap} />;\n      })}\n  </div>\n);\n\nexport default LapRunner;\n"]},"metadata":{},"sourceType":"module"}